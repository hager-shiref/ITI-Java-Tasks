/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author ADAM STORE
 */
public class MyNotePad extends javax.swing.JFrame {

    /**
     * Creates new form MyNotePad
     */
    public MyNotePad() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuFile = new javax.swing.JMenu();
        meunItemNew = new javax.swing.JMenuItem();
        meunItemOpen = new javax.swing.JMenuItem();
        meunItemSave = new javax.swing.JMenuItem();
        meunItemExit = new javax.swing.JMenuItem();
        meunEdit = new javax.swing.JMenu();
        meunItemCut = new javax.swing.JMenuItem();
        meunItemCopy = new javax.swing.JMenuItem();
        meunItemPaste = new javax.swing.JMenuItem();
        meunItemDelete = new javax.swing.JMenuItem();
        meunItemSelectAll = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        meunItemAbout = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        menuFile.setText("File");

        meunItemNew.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        meunItemNew.setText("New");
        meunItemNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                meunItemNewActionPerformed(evt);
            }
        });
        menuFile.add(meunItemNew);

        meunItemOpen.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        meunItemOpen.setText("Open");
        meunItemOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                meunItemOpenActionPerformed(evt);
            }
        });
        menuFile.add(meunItemOpen);

        meunItemSave.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        meunItemSave.setText("Save");
        meunItemSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                meunItemSaveActionPerformed(evt);
            }
        });
        menuFile.add(meunItemSave);

        meunItemExit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        meunItemExit.setText("Exit");
        meunItemExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                meunItemExitActionPerformed(evt);
            }
        });
        menuFile.add(meunItemExit);

        jMenuBar1.add(menuFile);

        meunEdit.setText("Edit");

        meunItemCut.setText("Cut");
        meunItemCut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                meunItemCutActionPerformed(evt);
            }
        });
        meunEdit.add(meunItemCut);

        meunItemCopy.setText("Copy");
        meunItemCopy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                meunItemCopyActionPerformed(evt);
            }
        });
        meunEdit.add(meunItemCopy);

        meunItemPaste.setText("Paste");
        meunItemPaste.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                meunItemPasteActionPerformed(evt);
            }
        });
        meunEdit.add(meunItemPaste);

        meunItemDelete.setText("Delete");
        meunItemDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                meunItemDeleteActionPerformed(evt);
            }
        });
        meunEdit.add(meunItemDelete);

        meunItemSelectAll.setText("selectAll");
        meunItemSelectAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                meunItemSelectAllActionPerformed(evt);
            }
        });
        meunEdit.add(meunItemSelectAll);

        jMenuBar1.add(meunEdit);

        jMenu1.setText("Help");

        meunItemAbout.setText("About");
        meunItemAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                meunItemAboutActionPerformed(evt);
            }
        });
        jMenu1.add(meunItemAbout);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void meunItemOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_meunItemOpenActionPerformed
        // TODO add your handling code here:
        JFileChooser fc= new JFileChooser();
        if(fc.showOpenDialog(this)==JFileChooser.APPROVE_OPTION){
            String path=fc.getSelectedFile().getPath();
            FileInputStream fis;
            try {
                fis = new FileInputStream(path);
                try {
                    int size=fis.available();
                    byte[]b=new byte[size];
                    fis.read(b);
                    jTextArea1.setText(new String (b));
                    fis.close();
                } catch (IOException ex) {
                    Logger.getLogger(MyNotePad.class.getName()).log(Level.SEVERE, null, ex);
                }
            } catch (FileNotFoundException ex) {
                Logger.getLogger(MyNotePad.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            
        }
    }//GEN-LAST:event_meunItemOpenActionPerformed

    private void meunItemNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_meunItemNewActionPerformed
        // TODO add your handling code here:
        jTextArea1.setText("");
    }//GEN-LAST:event_meunItemNewActionPerformed

    private void meunItemSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_meunItemSaveActionPerformed
        // TODO add your handling code here:
        JFileChooser fc=new JFileChooser();
        if(fc.showSaveDialog(MyNotePad.this)==JFileChooser.APPROVE_OPTION){
            String path=fc.getSelectedFile().getPath();
            try {
                FileOutputStream fos=new FileOutputStream(path);
                byte[]b=jTextArea1.getText().getBytes();
                fos.write(b);
                fos.close();
            } catch (FileNotFoundException ex) {
                Logger.getLogger(MyNotePad.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(MyNotePad.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
    }//GEN-LAST:event_meunItemSaveActionPerformed

    private void meunItemExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_meunItemExitActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_meunItemExitActionPerformed

    private void meunItemPasteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_meunItemPasteActionPerformed
        // TODO add your handling code here:
        jTextArea1.paste();
    }//GEN-LAST:event_meunItemPasteActionPerformed

    private void meunItemCopyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_meunItemCopyActionPerformed
        // TODO add your handling code here:
        jTextArea1.copy();
    }//GEN-LAST:event_meunItemCopyActionPerformed

    private void meunItemCutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_meunItemCutActionPerformed
        // TODO add your handling code here:
        jTextArea1.cut();
    }//GEN-LAST:event_meunItemCutActionPerformed

    private void meunItemDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_meunItemDeleteActionPerformed
        // TODO add your handling code here:
       jTextArea1.setText(jTextArea1.getText().replace(jTextArea1.getSelectedText(),""));
        
    }//GEN-LAST:event_meunItemDeleteActionPerformed

    private void meunItemSelectAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_meunItemSelectAllActionPerformed
        // TODO add your handling code here:
        jTextArea1.selectAll();
    }//GEN-LAST:event_meunItemSelectAllActionPerformed

    private void meunItemAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_meunItemAboutActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "this is a normal notepad with simple ui "+"\n"
                + "version : 2.2.3","About",JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_meunItemAboutActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MyNotePad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MyNotePad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MyNotePad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MyNotePad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MyNotePad().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JMenu menuFile;
    private javax.swing.JMenu meunEdit;
    private javax.swing.JMenuItem meunItemAbout;
    private javax.swing.JMenuItem meunItemCopy;
    private javax.swing.JMenuItem meunItemCut;
    private javax.swing.JMenuItem meunItemDelete;
    private javax.swing.JMenuItem meunItemExit;
    private javax.swing.JMenuItem meunItemNew;
    private javax.swing.JMenuItem meunItemOpen;
    private javax.swing.JMenuItem meunItemPaste;
    private javax.swing.JMenuItem meunItemSave;
    private javax.swing.JMenuItem meunItemSelectAll;
    // End of variables declaration//GEN-END:variables
}
